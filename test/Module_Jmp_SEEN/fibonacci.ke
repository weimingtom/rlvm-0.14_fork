// This file is part of RLVM, a RealLive virtual machine clone.
//
// -----------------------------------------------------------------------
//
// Copyright (C) 2006 Elliot Glaysher
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
//
// -----------------------------------------------------------------------

#version 1.3

// Stack marker. Since Reallive provides no variable
// stack, we need to manually keep track of this.
intA[0] = 0

// intB[0] is the top of our stack.
intB[0] = 0

// Call fibonacci. intD[0] was set before the program
// was run, and the caller will read the result from
// intE[0]
intE[0] = gosub_with(intD[0]) @fib
goto @end

// -----------------------------------------------------

@fib
// Check the termination conditions
if intL[0] == 0 ret_with(0)
if intL[0] == 1 ret_with(1)

// Copy the incoming data onto the stack, and
// increment the pointer.
intB[intA[0]] = intL[0] - 1
intA[0] += 1
intB[intA[0]] = intL[0] - 2
intA[0] += 1

intB[intA[0] - 2] = gosub_with(intB[intA[0] - 2]) @fib
intB[intA[0] - 1] = gosub_with(intB[intA[0] - 1]) @fib

// Decrement the stack point
intA[0] -= 2
ret_with(intB[intA[0]] + intB[intA[0] + 1])

@end


